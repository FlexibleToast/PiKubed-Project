---
# tasks file for roles/install-k3s-ha
- name: install k3s SELinux support
  yum:
    name: '{{ item }}'
    state: present
  loop:
  - container-selinux
  - selinux-policy-base
  - https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm
  when: ansible_distribution_file_variety == "RedHat"

- name: Verify cgroup flags are enabled
  shell: grep "{{ item }}" /boot/cmdline.txt || sed -i 's/\(.*\)/\1 {{ item }}/g' /boot/cmdline.txt && touch /tmp/cgroup.reboot
  loop:
    - 'cgroup\_enable\=cpuset'
    - 'cgroup\_enable\=memory'
    - 'cgroup\_memory\=1'

- name: Check if cgroups changed
  stat:
    path: /tmp/cgroup.reboot
  register: cgroup_reboot

- name: Reboot to apply cgroups
  reboot:
  when: cgroup_reboot.stat.exists

- name: install initial master
  shell: curl -sfL https://get.k3s.io | \
    sh -s - server --cluster-init
  args:
    creates: /var/lib/rancher/k3s/server/node-token
  when: ansible_host in groups['init_master']
  register: cluster_init

- name: get node token
  shell: cat /var/lib/rancher/k3s/server/node-token
  register: node_token
  delegate_to: "{{ groups['init_master'][0] }}"

- name: Wait for master to stabilize
  pause:
    minutes: 5
  when: cluster_init.changed

- name: install masters
  shell: curl -sfL https://get.k3s.io | \
    sh -s - server --server https://{{ hostvars[groups['init_master'][0]].ansible_default_ipv4.address }} --token {{ node_token.stdout }}
  args:
    creates: /var/lib/rancher/k3s/server
  when: ansible_host in groups['masters']
  ignore_errors: yes

- name: check k3s running on all masters
  service:
    name: k3s
    state: started
  when: ansible_host in groups['masters']

- name: install nodes
  shell: curl -sfL https://get.k3s.io | \
    K3S_URL=https://{{ hostvars[groups['init_master'][0]].ansible_default_ipv4.address }}:6443 \
    K3S_TOKEN={{ node_token.stdout }} \
    sh -
  args:
    creates: /var/lib/rancher/k3s/agent/client-ca.crt
  when: ansible_host in groups['workers']

- name: create k3s.yaml.orig
  copy:
    remote_src: yes
    src: /etc/rancher/k3s/k3s.yaml
    dest: /etc/rancher/k3s/k3s.yaml.orig
    force: no
  when: ansible_host in groups['init_master']

- name: modify k3s.yaml with VIP
  replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: "server: https://127.0.0.1:6443"
    replace: "server: https://{{ vip.ip }}:6443"
  when: ansible_host in groups['init_master']

- name: get kube config
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: k3s.yaml
    mode: 0600
    flat: yes
  when: ansible_host in groups['init_master']
