---
# tasks file for roles/install-k3s-ha
- name: Install k3s SELinux support
  yum:
    name: '{{ item }}'
    state: present
  loop:
  - container-selinux
  - selinux-policy-base
  - https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm
  when: ansible_distribution_file_variety == "RedHat"

- name: Verify cgroup flags are enabled (Raspberry Pi OS | CentOS)
  shell: grep "{{ item }}" /boot/cmdline.txt || sed -i 's/\(.*\)/\1 {{ item }}/g' /boot/cmdline.txt || touch /tmp/cgroup.reboot
  loop:
    - 'cgroup\_enable\=cpuset'
    - 'cgroup\_enable\=memory'
    - 'cgroup\_memory\=1'
  when: ansible_facts['distribution'] != 'Ubuntu'

- name: Verify cgroup flags are enabled (Ubuntu)
  shell: grep "{{ item }}" /boot/firmware/cmdline.txt || sed -i 's/\(.*\)/\1 {{ item }}/g' /boot/firmware/cmdline.txt && touch /tmp/cgroup.reboot
  loop:
    - 'cgroup\_enable\=cpuset'
    - 'cgroup\_enable\=memory'
    - 'cgroup\_memory\=1'
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Check if cgroups changed
  stat:
    path: /tmp/cgroup.reboot
  register: cgroup_reboot

- name: Reboot to apply cgroups
  reboot:
    post_reboot_delay: 30
  when: cgroup_reboot.stat.exists
  delegate_to: '{{ item }}'
  run_once: yes
  loop: "{{ groups['pikubed_cluster'] }}"

- name: Install masters
  shell: curl -sfL https://get.k3s.io | \
    sh -s - server \
    --datastore-endpoint="{%- for host in groups['masters'] -%}
      http://{{ host }}:2379{{ "," if not loop.last else '' }}
    {%- endfor -%}"
  args:
    creates: /var/lib/rancher/k3s/server/node-token
  delegate_to: '{{ item }}'
  run_once: yes
  loop: "{{ groups['masters'] }}"

- name: Get node token
  shell: cat /var/lib/rancher/k3s/server/node-token
  register: token_file
  delegate_to: "{{ groups['masters'][0] }}"

- set_fact:
    node_token: '{{ token_file.stdout }}'

- name: Check k3s running on all masters
  service:
    name: k3s
    state: started
  when: ansible_host in groups['masters']

- name: Install workers
  shell: curl -sfL https://get.k3s.io | \
    K3S_URL=https://{{ hostvars[groups['masters'][0]].ansible_default_ipv4.address }}:6443 \
    K3S_TOKEN={{ node_token }} \
    sh -
  args:
    creates: /var/lib/rancher/k3s/agent/client-ca.crt
  when: ansible_host in groups['workers']

- name: Create k3s.yaml.orig
  copy:
    remote_src: yes
    src: /etc/rancher/k3s/k3s.yaml
    dest: /etc/rancher/k3s/k3s.yaml.orig
    force: no
  when: ansible_host == groups['masters'][0]

- name: Modify k3s.yaml with VIP
  replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: "server: https://127.0.0.1:6443"
    replace: "server: https://{{ vip.ip }}:6443"
  when: ansible_host == groups['masters'][0]

- name: Get kube config
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: k3s.yaml
    mode: 0600
    flat: yes
  when: ansible_host == groups['masters'][0]
