---
# tasks file for roles/install-k3s
- name: start firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: open firewalld ports for k3s
  firewalld:
    port: '{{ item }}'
    state: enabled
    permanent: yes
    immediate: yes
  loop:
  - 80/tcp
  - 443/tcp
  - 6443/tcp  # Kubernetes API
  - 8472/udp  # Required only for Flannel VXLAN
  - 10250/tcp # kubelet
  
- name: install k3s SELinux support
  yum:
    name: '{{ item }}'
    state: present
  loop:
  - container-selinux
  - selinux-policy-base
  - https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm
  when: ansible_distribution_file_variety == "RedHat"

- name: create cgroups
  shell: grep "cgroup_memory=1 cgroup_enable=memory" /boot/cmdline.txt || sed -i 's/\(.*\)/\1 cgroup\_memory\=1\ cgroup\_enable\=memory/g' /boot/cmdline.txt

- name: reboot to apply cgroups
  reboot:

- name: install initial master
  shell: curl -sfL https://get.k3s.io | \
    INSTALL_K3S_EXEC="server --cluster-init" sh -
  args:
    creates: /var/lib/rancher/k3s/server/node-token
  when: ansible_host == groups['master'][0]

- name: get node token
  shell: cat /var/lib/rancher/k3s/server/node-token
  register: node_token
  delegate_to: "{{ groups['master'][0] }}"

- name: install masters
  shell: curl -sfL https://get.k3s.io | \
    K3S_URL=https://{{ hostvars[groups['master'][0]].ansible_default_ipv4.address }}:6443 \
    K3S_TOKEN={{ node_token.stdout }} \
    INSTALL_K3S_EXEC="server --server https://{{ hostvars[groups['master'][0]].ansible_default_ipv4.address }}:6443" \
    sh -
  args:
    creates: /var/lib/rancher/k3s/agent/client-ca.crt
  when: ansible_host in groups['master'] and ansible_host != groups['master'][0]
  ignore_errors: yes

- name: check k3s running on all masters
  service:
    name: k3s
    state: started
  when: ansible_host in groups['master']

- name: install nodes
  shell: curl -sfL https://get.k3s.io | \
    K3S_URL=https://{{ hostvars[groups['master'][0]].ansible_default_ipv4.address }}:6443 \
    K3S_TOKEN={{ node_token.stdout }} \
    sh -
  args:
    creates: /var/lib/rancher/k3s/agent/client-ca.crt
  when: ansible_host in groups['workers']

- name: create k3s.yaml.orig
  copy:
    remote_src: yes
    src: /etc/rancher/k3s/k3s.yaml
    dest: /etc/rancher/k3s/k3s.yaml.orig
    force: no
  when: ansible_host == groups['master'][0]

- name: modify k3s.yaml with master hostname
  replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: "server: https://127.0.0.1:6443"
    replace: "server: https://{{ hostvars[groups['master'][0]].ansible_hostname }}:6443"
  when: ansible_host == groups['master'][0]

- name: get kube config
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: k3s.yaml
    mode: 0600
    flat: yes
  when: ansible_host == groups['master'][0]
