---
# tasks file for roles/create-volumes
- name: Ensure firewalld is running
  service:
    name: firewalld
    state: started
    enabled: yes
    
- name: Open firewalld tcp ports
  firewalld:
    port: '{{ item }}/tcp'
    permanent: yes
    immediate: yes
    state: enabled
  loop:
  - 111   # rpc port mapper
  - 139   # netbios
  - 445   # CIFS
  - 965   # NFS Lock Manager
  - 2049  # GlusterFS NFS exports
  - 24007 # Glusterd
  - 24009-24108 # Client communication
  - 38465 # NFS mount
  - 38466 # NFS mount
  - 38468 # NFS Lock Manager
  - 38469 # NFS ACL
  - 49152-49251 # Client communication
  - 54321 # VDSM

- name: Open firewalld udp ports
  firewalld:
    port: '{{ item }}/udp'
    permanent: yes
    immediate: yes
    state: enabled
  loop:
  - 111 # RPC Bind
  - 963 # NFS Lock Manager

- name: Install prerequirements (apt)
  include_tasks: gluster-deb.yml
  when: ansible_distribution_file_variety == "Debian"

- name: Install prerequirements (yum)
  include_tasks: gluster-rpm.yml
  when: ansible_distribution_file_variety == "RedHat"

- name: Create volume group
  lvg:
    vg: '{{ vg.name }}'
    pvs: '{{ vg.drives }}'

- name: Create thinpool
  lvol:
    vg: '{{ vg.name }}'
    thinpool: '{{ tpool.name }}'
    size: '{{ tpool.size }}'

- name: Create logical volumes
  lvol:
    vg: '{{ vg.name }}'
    thinpool: '{{ tpool.name }}'
    lv: '{{ item.name }}'
    size: '{{ item.size }}'
  loop: '{{ lvs }}'

- name: Make filesystems
  filesystem:
    fstype: xfs
    dev: /dev/{{ vg.name }}/{{ item.name }}
  loop: '{{ lvs }}'

- name: Make brick mountpoints
  file:
    path: "{{ brick_mount}}/{{ item.name }}"
    state: directory
  loop: '{{ lvs }}'

- name: Mount bricks
  mount:
    path: "{{ brick_mount}}/{{ item.name }}"
    src: /dev/{{ vg.name }}/{{ item.name }}
    fstype: xfs
    state: mounted
  loop: '{{ lvs }}'

- name: Start GlusterFS daemon
  service:
    name: glusterd
    state: started
    enabled: yes

- name: Peer probe GlusterFS
  command: gluster peer probe {{ item }}
  run_once: true
  loop: '{{ groups.pikubed_cluster }}'
  register: gluster_peer_probe
  changed_when: "'already in peer list' not in gluster_peer_probe.stdout"

- name: Create GlusterFS volumes
  gluster_volume:
    state: present
    name: '{{ item.name }}'
    bricks: "{{ brick_mount}}/{{ item.name }}"
    replicas: 2
    cluster: '{{ groups.pikubed_cluster }}'
    force: yes
    start_on_create: yes
  loop: '{{ lvs }}'
  run_once: yes

- name: Make GlusterFS mountpoints
  file:
    path: "{{ brick_mount}}/{{ item.name }}"
    state: directory
  loop: '{{ lvs }}'

- name: Mount bricks
  mount:
    path: "{{ gluster_mount }}/{{ item.name }}"
    src: "{{ groups.pikubed_cluster[0] }}:/{{ item.name }}"
    fstype: glusterfs
    opts: defaults,{%- for host in groups['pikubed_cluster'][1:] -%}backupvolfile-server={{ host }}{{ "," if not loop.last }}{%- endfor -%}
    state: mounted
  loop: '{{ lvs }}'
